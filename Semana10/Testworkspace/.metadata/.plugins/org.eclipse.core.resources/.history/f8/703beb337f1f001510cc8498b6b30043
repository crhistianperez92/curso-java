package mx.gob.tabasco.seguro.views;

import java.util.List;

import javax.json.JsonArray;
import javax.json.JsonObject;
import javax.json.JsonValue;
import javax.json.stream.JsonGenerator;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.GenericType;

import org.controlsfx.control.action.Action;
import org.controlsfx.dialog.Dialog;
import org.controlsfx.dialog.Dialogs;
import org.glassfish.jersey.jsonp.JsonProcessingFeature;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.scene.control.Label;
import javafx.scene.control.TableCell;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.input.MouseEvent;
import javafx.scene.text.Text;
import javafx.util.Callback;
import mx.gob.tabasco.seguro.MainApp;
import mx.gob.tabasco.seguro.model.Asegurado;
import mx.gob.tabasco.seguro.model.AseguradoMessageBodyReader;
import mx.gob.tabasco.seguro.util.AseguradoWebService;

public class AseguradoOverviewController {
	
	private static final String REST_SERVICE_URL = "http://localhost:8080/MiProyecto/api";
	
	@FXML
    private TableView<Asegurado> aseguradoTable;
	@FXML
    private TableColumn<Asegurado, String> nombreColumn;
	@FXML
    private TableColumn<Asegurado, String> apellidosColumn;
	@FXML
    private TableColumn<Asegurado, Number> edadColumn;
	@FXML
    private TableColumn<Asegurado, String> sexoColumn;
	@FXML
    private TableColumn<Asegurado, String> numeroSeguroColumn;
	
	@FXML
	private Label nombreLabel;
	@FXML
	private Label apellidosLabel;
	@FXML
	private Label edadLabel;
	@FXML
	private Label sexoLabel;
	@FXML
	private Label numeroSeguroLabel;
	
	
	
	private MainApp mainApp;
	private ObservableList<Asegurado> aseguradoData; 
	
	public AseguradoOverviewController() {
		
	}
	

	
	private void loadTablaAsegurado(){
		aseguradoTable.getItems().clear();
		aseguradoTable.setItems(aseguradoData);
		nombreColumn.setCellValueFactory(cellData -> cellData.getValue().nombreProperty());
		apellidosColumn.setCellValueFactory(cellData -> cellData.getValue().apellidoProperty());
		edadColumn.setCellValueFactory(cellData -> cellData.getValue().edadProperty());
		sexoColumn.setCellValueFactory(cellData -> cellData.getValue().sexoProperty());
		sexoColumn.setCellFactory(new Callback<TableColumn<Asegurado,String>, TableCell<Asegurado,String>>() {
			@Override
			public TableCell<Asegurado, String> call( TableColumn<Asegurado, String> param) {
				final TableCell<Asegurado, String> cell = new TableCell<Asegurado, String>() {
					private Text text;
					@Override
					public void updateItem(String item, boolean empty) {
						super.updateItem(item, empty);
						if (!isEmpty()) {
							if(item.toString().trim().equals("M")){
								text = new Text("Masculino");
							}else if(item.toString().trim().equals("F")){
								text = new Text("Femenino");
							}else{
								text = new Text("");
							}
							setGraphic(text);
						}
					}
				};
				return cell;
			}
		});
		numeroSeguroColumn.setCellValueFactory(cellData -> cellData.getValue().numeroSeguroSocialProperty());
		aseguradoTable.setOnMousePressed(new EventHandler<MouseEvent>() {
    	    @Override 
    	    public void handle(MouseEvent event) {
    	        if (event.isPrimaryButtonDown() && event.getClickCount() == 1) {
    	        	handleLabelSeletcAsegurado();                   
    	        }
    	    }
    	});
	}
	
	private void handleLabelSeletcAsegurado(){
		Asegurado asegurado = aseguradoTable.getSelectionModel().getSelectedItem();
		nombreLabel.setText(asegurado.getNombre());
		apellidosLabel.setText(asegurado.getApellido());
		edadLabel.setText(Integer.toString(asegurado.getEdad()));
		sexoLabel.setText(asegurado.getSexo());
		numeroSeguroLabel.setText(asegurado.getNumeroSeguroSocial());
	}
	
	@FXML
	private void handleEditar(){
		Asegurado asegurado = aseguradoTable.getSelectionModel().getSelectedItem();
		if(asegurado!=null){
			
		}else{
			Dialogs.create()
            .title("Aviso")
            .masthead("No existe asegurado seleccionado.")
            .message("Porfavor seleccione un asegurado.")
            .showWarning();
		}
		
	}
	@FXML
	private void handleEliminar(){
		Asegurado asegurado = aseguradoTable.getSelectionModel().getSelectedItem();
		if(asegurado!=null){
			Action response = Dialogs.create()	    	 
	    	        .title("Eliminar Asegurado")
	    	        .masthead("Se procedera a eliminar el assegurado"+asegurado.getNombre()+" "+asegurado.getApellido()+" con el No. de Seguro "+asegurado.getNumeroSeguroSocial()+" seleccionado.")
	    	        .message("¿Deseas continuar?")
	    	        .showConfirm();

	    	if (response == Dialog.Actions.YES) {
	    		
	    		AseguradoWebService ws = new AseguradoWebService();
				boolean ok = ws.eliminarAsegurado(asegurado);
				if(ok){				
					
					aseguradoData.remove(asegurado);
					aseguradoTable.getItems().clear();
					aseguradoTable.setItems(aseguradoData);
					Dialogs.create()
		            .title("Aviso")
		            .masthead("")
		            .message("Se elimino de forma correcta.")
		            .showInformation();
				}
				
	    	} 
		}else{
			Dialogs.create()
            .title("Aviso")
            .masthead("No existe asegurado seleccionado.")
            .message("Porfavor seleccione un asegurado.")
            .showWarning();
		}
	}
	
	@FXML
    private void initialize(){
		
    }
	
	public void setMainApp(MainApp mainApp) {
        this.mainApp = mainApp;
        aseguradoData = mainApp.getAsegurdosData();
        
        AseguradoWebService ws = new AseguradoWebService();
		ws.loadAsegurados(aseguradoData);
		loadTablaAsegurado();
    }

}
